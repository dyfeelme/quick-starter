<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 线程执行器配置，用于任务注册 -->
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="500" />
	</bean>

	<bean id="methodJobBean" class="com.zs.framework.quartz.MethodJobBean" />

	<bean id="simpleJobBean" class="com.zs.framework.quartz.SimpleJobBean" />

	<bean name="simpleJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.zs.framework.quartz.SimpleJobBean" />
		<property name="durability" value="true" />
	</bean>

	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="methodJobBean" />
		<property name="targetMethod" value="execute" />
	</bean>

	<!-- 简单任务打火器 -->
	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="simpleJobDetail" />
		<!-- 10 seconds -->
		<property name="startDelay" value="10000" />
		<!-- repeat every 50 seconds -->
		<property name="repeatInterval" value="50000" />
	</bean>

	<!-- 基于Cron表达式的打火器 -->
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<!-- 每分钟执行一次 -->
		<property name="cronExpression" value="*/30 * * * * ?" />
	</bean>

	<!-- 基于Quartz的调度器工厂bean -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="txManager" />

		<!-- This name is persisted as SCHED_NAME in db. for local testing could 
			change to unique name to avoid collision with dev server -->
		<property name="schedulerName" value="quartzScheduler" />

		<!-- Will update database cron triggers to what is in this jobs file on 
			each deploy. Replaces all previous trigger and job data that was in the database. 
			YMMV -->
		<property name="overwriteExistingJobs" value="true" />

		<property name="startupDelay" value="5" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="jobFactory">
			<bean class="com.zs.framework.quartz.AutowiredSpringBeanJobFactory" />
		</property>

		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
		<property name="jobDetails">
			<list>
				<ref bean="jobDetail" />
			</list>
		</property>
		<property name="taskExecutor" ref="executor" />
	</bean>

</beans>